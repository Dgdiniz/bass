name: Build Latest
on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
jobs:
  build:
    strategy:
      matrix:
        os:
        - name: ubuntu
          version: latest
        - name: windows
          version: latest
        - name: macos
          version: latest
    runs-on: ${{ matrix.os.name }}-${{ matrix.os.version }}

    steps:
    - uses: actions/checkout@v2
    - name: Init
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          if [[ ! -d "bass/obj" ]]; then mkdir "bass/obj"; fi
          if [[ ! -d "bass/out" ]]; then mkdir "bass/out"; fi
          if [[ ! -d "dist" ]]; then mkdir "dist"; fi
        else
          mkdir -p bass/obj
          mkdir -p bass/out
          mkdir -p dist
        fi
        cp -R bass/data/* bass/out/
        cp -R doc bass/out/
    
    - name: Make
      run: make
      working-directory: bass    

    - name: Install 7z
      if: runner.os == 'macOS'
      run: |
        brew install p7zip  

    - name: Pack
      shell: bash
      run: |
        case "${{ runner.os }}" in
          "Windows")
            7z a -tzip dist/bass-${{ runner.os }}.zip bass/out/*
            ;;
          *)
            zip -r dist/bass-${{ runner.os }}.zip bass/out/
            ;;
        esac

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: bass-${{ matrix.os.name }}
        path: dist/bass*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set Version
      id: version
      run: echo ::set-output name=hash::$(git rev-parse --short HEAD)   
    
    - name: Download
      uses: actions/download-artifact@v2
      with:
        path: dist

    - name: Create temporary tag
      run: git tag temp-release-${{ steps.version.outputs.hash }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: temp-release-${{ steps.version.outputs.hash }}
        name: "Release ${{ steps.version.outputs.hash }}"
        draft: false
        prerelease: false
        files: |
          dist/bass-Ubuntu.zip
          dist/bass-Windows.zip
          dist/bass-macOS.zip
    
    - name: Delete temporary tag
      run: git tag -d temp-release-${{ steps.version.outputs.hash }}
    